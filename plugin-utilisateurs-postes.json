{
  "manifestVersion": "1.0.0",
  "id": "utilisateurs-postes-prive",
  "version": "1.0.0", 
  "name": "Utilisateurs et Postes (Priv√©)",
  "description": "Plugin priv√© de gestion des utilisateurs et postes",
  "author": "R. Valentin",
  "staticTabs": [
    {
      "entityId": "utilisateurs-postes",
      "context": ["pbxMenu"],
      "name": "Utilisateurs et Postes",
      "parent": "common.layout.pbxMenu.userManagement", 
      "when": "user.uuid == '49819d12-9079-408b-a1d0-6516200b8346'",
      "content": {
        "html": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Utilisateurs et Postes</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            margin: 0;\n            padding: 20px;\n            background-color: #f5f7fa;\n            color: #333;\n        }\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        .header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            text-align: center;\n        }\n        .header h1 {\n            margin: 0;\n            font-size: 28px;\n            font-weight: 300;\n        }\n        .stack-indicator {\n            background: rgba(255,255,255,0.2);\n            padding: 8px 16px;\n            border-radius: 20px;\n            margin-top: 10px;\n            display: inline-block;\n            font-size: 14px;\n        }\n        .toolbar {\n            background: #f8f9fa;\n            padding: 15px 20px;\n            border-bottom: 1px solid #e9ecef;\n            display: flex;\n            gap: 10px;\n            flex-wrap: wrap;\n        }\n        .btn {\n            padding: 8px 16px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 14px;\n            text-decoration: none;\n            display: inline-flex;\n            align-items: center;\n            gap: 5px;\n            transition: all 0.2s;\n        }\n        .btn-primary {\n            background: #007bff;\n            color: white;\n        }\n        .btn-primary:hover {\n            background: #0056b3;\n        }\n        .btn-secondary {\n            background: #6c757d;\n            color: white;\n        }\n        .btn-secondary:hover {\n            background: #545b62;\n        }\n        .content-area {\n            padding: 20px;\n        }\n        .access-denied-container {\n            text-align: center;\n            padding: 60px 20px;\n            background: #f8f9fa;\n        }\n        .access-denied-container h2 {\n            color: #dc3545;\n            margin-bottom: 20px;\n            font-size: 24px;\n        }\n        .stack-info {\n            background: white;\n            border: 1px solid #dee2e6;\n            border-radius: 5px;\n            padding: 15px;\n            margin: 20px 0;\n            text-align: left;\n        }\n        .help-text {\n            color: #6c757d;\n            font-size: 14px;\n            margin-top: 20px;\n        }\n        .loading-container {\n            text-align: center;\n            padding: 40px;\n        }\n        .loading-spinner {\n            border: 4px solid #f3f3f3;\n            border-top: 4px solid #007bff;\n            border-radius: 50%;\n            width: 40px;\n            height: 40px;\n            animation: spin 1s linear infinite;\n            margin: 0 auto 20px;\n        }\n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        .filters-section {\n            background: #f8f9fa;\n            padding: 15px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n            display: flex;\n            gap: 15px;\n            flex-wrap: wrap;\n            align-items: center;\n        }\n        .filter-group {\n            display: flex;\n            flex-direction: column;\n            gap: 5px;\n        }\n        .filter-group label {\n            font-size: 12px;\n            font-weight: 600;\n            color: #495057;\n            text-transform: uppercase;\n        }\n        .filter-group select,\n        .filter-group input {\n            padding: 6px 10px;\n            border: 1px solid #ced4da;\n            border-radius: 3px;\n            font-size: 14px;\n        }\n        .btn-small {\n            padding: 6px 12px;\n            font-size: 12px;\n        }\n        .stats-cards {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        .stat-card {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 8px;\n            text-align: center;\n        }\n        .stat-card h3 {\n            font-size: 32px;\n            font-weight: bold;\n            margin-bottom: 5px;\n        }\n        .stat-card p {\n            font-size: 14px;\n            opacity: 0.9;\n        }\n        .table-container {\n            overflow-x: auto;\n        }\n        #users-table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 10px;\n        }\n        #users-table th,\n        #users-table td {\n            padding: 12px;\n            text-align: left;\n            border-bottom: 1px solid #eee;\n        }\n        #users-table th {\n            background-color: #f8f9fa;\n            font-weight: 600;\n            color: #555;\n            position: sticky;\n            top: 0;\n        }\n        #users-table tr:hover {\n            background-color: #f8f9fa;\n        }\n        .status {\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 12px;\n            font-weight: 500;\n        }\n        .status.active {\n            background: #d4edda;\n            color: #155724;\n        }\n        .status.inactive {\n            background: #f8d7da;\n            color: #721c24;\n        }\n        .action-buttons {\n            display: flex;\n            gap: 5px;\n        }\n        .action-buttons button {\n            padding: 4px 8px;\n            border: none;\n            border-radius: 3px;\n            cursor: pointer;\n            font-size: 11px;\n        }\n        .btn-view {\n            background: #17a2b8;\n            color: white;\n        }\n        .btn-edit {\n            background: #ffc107;\n            color: #212529;\n        }\n        .btn-sync {\n            background: #28a745;\n            color: white;\n        }\n        .messages-container {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n            max-width: 400px;\n        }\n        .message {\n            padding: 12px 16px;\n            margin-bottom: 10px;\n            border-radius: 4px;\n            font-size: 14px;\n            animation: slideIn 0.3s ease-out;\n        }\n        .message-info {\n            background: #d1ecf1;\n            color: #0c5460;\n            border-left: 4px solid #17a2b8;\n        }\n        .message-success {\n            background: #d4edda;\n            color: #155724;\n            border-left: 4px solid #28a745;\n        }\n        .message-warning {\n            background: #fff3cd;\n            color: #856404;\n            border-left: 4px solid #ffc107;\n        }\n        .message-error {\n            background: #f8d7da;\n            color: #721c24;\n            border-left: 4px solid #dc3545;\n        }\n        @keyframes slideIn {\n            from {\n                transform: translateX(100%);\n                opacity: 0;\n            }\n            to {\n                transform: translateX(0);\n                opacity: 1;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- Zone de v√©rification d'autorisation -->\n    <div id=\"authorization-check\" style=\"display: none;\">\n        <div class=\"loading-container\">\n            <div class=\"loading-spinner\"></div>\n            <p>V√©rification des autorisations...</p>\n        </div>\n    </div>\n\n    <!-- Message d'acc√®s refus√© -->\n    <div id=\"access-denied\" style=\"display: none;\">\n        <div class=\"access-denied-container\">\n            <h2>üîí Acc√®s Restreint</h2>\n            <p>Ce plugin est r√©serv√© √† un usage priv√©.</p>\n            <div class=\"stack-info\">\n                <p><strong>UUID utilisateur requis :</strong> 49819d12-9079-408b-a1d0-6516200b8346</p>\n            </div>\n            <p class=\"help-text\">Contactez l'administrateur pour plus d'informations.</p>\n        </div>\n    </div>\n\n    <!-- Interface principale -->\n    <div id=\"main-interface\" style=\"display: none;\">\n        <div class=\"container\">\n            <div class=\"header\">\n                <h1>üìä Utilisateurs et Postes</h1>\n                <div class=\"stack-indicator\">\n                    <span>üîí Plugin Priv√©</span>\n                </div>\n            </div>\n\n            <div class=\"toolbar\">\n                <button id=\"btn-refresh\" class=\"btn btn-primary\">\n                    üîÑ Actualiser\n                </button>\n                <button id=\"btn-export\" class=\"btn btn-secondary\">\n                    üìã Exporter\n                </button>\n                <button id=\"btn-config\" class=\"btn btn-secondary\">\n                    ‚öôÔ∏è Configuration\n                </button>\n            </div>\n\n            <div class=\"content-area\">\n                <!-- Zone de filtres -->\n                <div class=\"filters-section\">\n                    <div class=\"filter-group\">\n                        <label for=\"filter-status\">Statut :</label>\n                        <select id=\"filter-status\">\n                            <option value=\"\">Tous</option>\n                            <option value=\"active\">Actif</option>\n                            <option value=\"inactive\">Inactif</option>\n                        </select>\n                    </div>\n                    <div class=\"filter-group\">\n                        <label for=\"filter-search\">Recherche :</label>\n                        <input type=\"text\" id=\"filter-search\" placeholder=\"Nom, extension...\">\n                    </div>\n                    <button id=\"btn-filter\" class=\"btn btn-small btn-primary\">Filtrer</button>\n                </div>\n\n                <!-- Zone de donn√©es -->\n                <div class=\"data-section\">\n                    <div class=\"stats-cards\">\n                        <div class=\"stat-card\">\n                            <h3 id=\"total-users\">-</h3>\n                            <p>Utilisateurs Total</p>\n                        </div>\n                        <div class=\"stat-card\">\n                            <h3 id=\"active-users\">-</h3>\n                            <p>Utilisateurs Actifs</p>\n                        </div>\n                        <div class=\"stat-card\">\n                            <h3 id=\"total-devices\">-</h3>\n                            <p>Postes Total</p>\n                        </div>\n                    </div>\n\n                    <!-- Tableau des donn√©es -->\n                    <div class=\"table-container\">\n                        <table id=\"users-table\">\n                            <thead>\n                                <tr>\n                                    <th>Nom</th>\n                                    <th>Extension</th>\n                                    <th>Poste</th>\n                                    <th>Statut</th>\n                                    <th>Derni√®re Activit√©</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"users-table-body\">\n                                <!-- Donn√©es charg√©es dynamiquement -->\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Zone de messages -->\n    <div id=\"messages\" class=\"messages-container\"></div>\n\n    <script>\n        // Configuration et variables globales\n        let app, context, isAuthorized = false;\n        const AUTHORIZED_UUID = '49819d12-9079-408b-a1d0-6516200b8346';\n\n        // V√©rification d'acc√®s utilisateur\n        function checkUserAccess(context) {\n            const userUuid = context?.user?.uuid || context?.app?.extra?.user?.uuid;\n            console.log('V√©rification UUID utilisateur:', userUuid);\n            \n            if (userUuid === AUTHORIZED_UUID) {\n                console.log('‚úÖ Utilisateur autoris√©');\n                return true;\n            }\n            \n            console.log('‚ùå Utilisateur non autoris√©');\n            return false;\n        }\n\n        // Initialisation du plugin\n        async function initializePlugin() {\n            try {\n                console.log('üöÄ Initialisation du plugin...');\n                \n                // Afficher l'indicateur de v√©rification\n                document.getElementById('authorization-check').style.display = 'block';\n                \n                // Initialiser le SDK Wazo\n                if (typeof WazoPluginsSDK !== 'undefined') {\n                    app = WazoPluginsSDK.app;\n                    await app.initialize();\n                    context = app.getContext();\n                    \n                    console.log('‚úÖ SDK Wazo initialis√©');\n                    \n                    // V√©rifier l'acc√®s utilisateur\n                    if (checkUserAccess(context)) {\n                        isAuthorized = true;\n                        await loadAuthorizedInterface();\n                    } else {\n                        showAccessDenied();\n                    }\n                } else {\n                    console.warn('‚ö†Ô∏è SDK Wazo non disponible');\n                    showAccessDenied();\n                }\n                \n            } catch (error) {\n                console.error('‚ùå Erreur initialisation:', error);\n                showAccessDenied();\n            }\n        }\n\n        // Chargement de l'interface autoris√©e\n        async function loadAuthorizedInterface() {\n            try {\n                console.log('‚úÖ Chargement interface autoris√©e...');\n                \n                // Masquer la v√©rification\n                document.getElementById('authorization-check').style.display = 'none';\n                \n                // Afficher l'interface principale\n                document.getElementById('main-interface').style.display = 'block';\n                \n                // Configurer les √©v√©nements\n                setupEventListeners();\n                \n                // Charger les donn√©es\n                await loadInitialData();\n                \n                console.log('‚úÖ Interface charg√©e avec succ√®s');\n                \n            } catch (error) {\n                console.error('‚ùå Erreur chargement interface:', error);\n                showMessage('Erreur lors du chargement de l\\'interface', 'error');\n            }\n        }\n\n        // Affichage du message d'acc√®s refus√©\n        function showAccessDenied() {\n            document.getElementById('authorization-check').style.display = 'none';\n            document.getElementById('access-denied').style.display = 'block';\n        }\n\n        // Configuration des √©v√©nements\n        function setupEventListeners() {\n            document.getElementById('btn-refresh')?.addEventListener('click', refreshData);\n            document.getElementById('btn-export')?.addEventListener('click', exportData);\n            document.getElementById('btn-config')?.addEventListener('click', openConfiguration);\n            document.getElementById('btn-filter')?.addEventListener('click', applyFilters);\n        }\n\n        // Chargement des donn√©es initiales\n        async function loadInitialData() {\n            try {\n                showMessage('Chargement des donn√©es...', 'info');\n                \n                // Simulation de donn√©es pour l'exemple\n                const mockData = {\n                    statistics: {\n                        totalUsers: 25,\n                        activeUsers: 18,\n                        totalDevices: 32\n                    },\n                    users: [\n                        {\n                            id: '1',\n                            name: 'Jean Dupont',\n                            extension: '1001',\n                            device: 'IP-Phone-001',\n                            status: 'active',\n                            lastActivity: '2025-09-17 09:30'\n                        },\n                        {\n                            id: '2',\n                            name: 'Marie Martin',\n                            extension: '1002', \n                            device: 'IP-Phone-002',\n                            status: 'inactive',\n                            lastActivity: '2025-09-16 17:45'\n                        }\n                    ]\n                };\n                \n                updateInterface(mockData);\n                showMessage('Donn√©es charg√©es avec succ√®s', 'success');\n                \n            } catch (error) {\n                console.error('‚ùå Erreur chargement donn√©es:', error);\n                showMessage('Erreur lors du chargement des donn√©es', 'error');\n            }\n        }\n\n        // Mise √† jour de l'interface\n        function updateInterface(data) {\n            updateStatistics(data.statistics);\n            updateUsersTable(data.users);\n        }\n\n        // Mise √† jour des statistiques\n        function updateStatistics(stats) {\n            document.getElementById('total-users').textContent = stats.totalUsers;\n            document.getElementById('active-users').textContent = stats.activeUsers;\n            document.getElementById('total-devices').textContent = stats.totalDevices;\n        }\n\n        // Mise √† jour du tableau\n        function updateUsersTable(users) {\n            const tbody = document.getElementById('users-table-body');\n            tbody.innerHTML = '';\n            \n            users.forEach(user => {\n                const row = tbody.insertRow();\n                row.innerHTML = `\n                    <td>${user.name}</td>\n                    <td>${user.extension}</td>\n                    <td>${user.device}</td>\n                    <td><span class=\"status ${user.status}\">${user.status}</span></td>\n                    <td>${user.lastActivity}</td>\n                    <td>\n                        <div class=\"action-buttons\">\n                            <button class=\"btn-view\" onclick=\"viewDetails('${user.id}')\">üëÅÔ∏è</button>\n                            <button class=\"btn-sync\" onclick=\"syncUser('${user.id}')\">üîÑ</button>\n                        </div>\n                    </td>\n                `;\n            });\n        }\n\n        // Fonctions utilitaires\n        function refreshData() {\n            if (!isAuthorized) return;\n            showMessage('Actualisation en cours...', 'info');\n            loadInitialData();\n        }\n\n        function exportData() {\n            if (!isAuthorized) return;\n            showMessage('Export en cours...', 'info');\n            // Logique d'export\n        }\n\n        function openConfiguration() {\n            if (!isAuthorized) return;\n            showMessage('Configuration non encore impl√©ment√©e', 'warning');\n        }\n\n        function applyFilters() {\n            if (!isAuthorized) return;\n            showMessage('Filtres appliqu√©s', 'info');\n        }\n\n        function viewDetails(userId) {\n            showMessage(`D√©tails utilisateur ${userId}`, 'info');\n        }\n\n        function syncUser(userId) {\n            showMessage(`Synchronisation utilisateur ${userId}...`, 'info');\n        }\n\n        // Affichage des messages\n        function showMessage(text, type = 'info') {\n            const messagesContainer = document.getElementById('messages');\n            const messageDiv = document.createElement('div');\n            messageDiv.className = `message message-${type}`;\n            messageDiv.textContent = text;\n            \n            messagesContainer.appendChild(messageDiv);\n            \n            setTimeout(() => {\n                if (messageDiv.parentNode) {\n                    messageDiv.parentNode.removeChild(messageDiv);\n                }\n            }, 5000);\n        }\n\n        // Initialisation au chargement\n        document.addEventListener('DOMContentLoaded', initializePlugin);\n    </script>\n</body>\n</html>"
      }
    }
  ],
  "permissions": [
    {
      "name": "utilisateurs-postes.read",
      "description": "Acc√®s en lecture aux informations utilisateurs et postes"
    },
    {
      "name": "utilisateurs-postes.write", 
      "description": "Acc√®s en √©criture (synchronisation des postes)"
    },
    {
      "name": "utilisateurs-postes.admin",
      "description": "Administration compl√®te du plugin utilisateurs et postes"
    }
  ],
  "metadata": {
    "environment": "production",
    "access_control": "user_specific",
    "authorized_user": "49819d12-9079-408b-a1d0-6516200b8346",
    "version": "private-1.0.0"
  }
}